CREATE DATABASE 'localhost:transport'
USER 'SYSDBA' PASSWORD '**********'
PAGE_SIZE 8192
DEFAULT CHARACTER SET NONE;

/* Tables */
CREATE TABLE T_ANNEESSCOLAIRES (
  IDX_ANNEESCOLAIRE   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  ANNEEANNEESCOLAIRE  INTEGER NOT NULL
) ;

CREATE TABLE T_CHAUFFEURS (
  IDX_CHAUFFEUR       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PRENOMCHAUFFEUR     VARCHAR(20) NOT NULL,
  PRINCIPALCHAUFFEUR  BOOLEAN DEFAULT TRUE,
  ACTIFCHAUFFEUR      BOOLEAN DEFAULT TRUE
) ;

CREATE TABLE T_EPHEMERIDES (
  IDX_EPHEMERIDE      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  IDX_ANNEESCOLAIRE   INTEGER NOT NULL,
  NOMEPHEMERIDE       VARCHAR(60) NOT NULL,
  STARTDATEPHEMERIDE  DATE NOT NULL,
  ENDDATEPHEMERIDE    DATE NOT NULL
) ;

CREATE TABLE T_ETAPES (
  IDX_ETAPE       INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  NOMETAPE        VARCHAR(60) CHARACTER SET UTF8 NOT NULL,
  ADRESSEETAPE    VARCHAR(100) CHARACTER SET UTF8 NOT NULL,
  PRINTEDETAPE    BOOLEAN DEFAULT FALSE,
  LATITUDEETAPE   DOUBLE PRECISION,
  LONGITUDEETAPE  DOUBLE PRECISION,
  ALTITUDEETAPE   DOUBLE PRECISION
) ;

CREATE TABLE T_INDISPONIBILITES (
  IDX_T_INDISPONIBILITE               INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  JOURENTIERINDISPONIBILITECHAUFFEUR  BOOLEAN DEFAULT FALSE
) ;

CREATE TABLE T_INDISPONIBILITESCHAUFFEURS (
  IDX_INDISPONIBILITECHAUFFEUR  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  IDX_CHAUFFEUR                 INTEGER NOT NULL,
  STARTDATEINDISPONIBILITE      DATE NOT NULL,
  STARTTIMEINDISPONIBILITE      TIME,
  ENDDATEINDISPONIBILITE        DATE NOT NULL,
  ENDTIMEINDISPONIBILITE        TIME,
  ALLDAYINDISPONIBILITE         BOOLEAN
) ;

CREATE TABLE T_INDISPONIBILITESVEHICULES (
  IDX_INDISPONIBILITEVEHICULE  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  IDX_VEHICULE                 INTEGER NOT NULL,
  STARTDATEINDISPONIBILITE     DATE NOT NULL,
  STARTTIMEINDISPONIBILITE     TIME,
  ENDDATEINDISPONIBILITE       DATE NOT NULL,
  ENDTIMEINDISPONIBILITE       TIME,
  ALLDAYINDISPONIBILITE        BOOLEAN
) ;

CREATE TABLE T_MARQUES (
  IDX_MARQUE  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  NOMMARQUE   VARCHAR(30) NOT NULL
) ;

CREATE TABLE T_TRAJETS (
  IDX_TRAJET        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  IDX_ETAPEDEPART   INTEGER NOT NULL,
  IDX_ETAPEARRIVEE  INTEGER NOT NULL,
  NOMTRAJET         VARCHAR(60) NOT NULL,
  TEMPSTRAJET       TIME NOT NULL,
  KMTRAJET          FLOAT NOT NULL
) ;

CREATE TABLE T_TYPESVEHICULES (
  IDX_TYPEVEHICULE  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  NOMTYPEVEHICULE   VARCHAR(20) NOT NULL
) ;

CREATE TABLE T_VEHICULES (
  IDX_VEHICULE      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  IDX_MARQUE        INTEGER NOT NULL,
  IDX_TYPEVEHICULE  INTEGER NOT NULL,
  NOMVEHICULE       VARCHAR(30) NOT NULL,
  PLACESVEHICULE    INTEGER NOT NULL,
  NUMEROVEHICULE    SMALLINT NOT NULL,
  PLAQUEVEHICULE    VARCHAR(9) NOT NULL,
  MODELEVEHICULE    VARCHAR(30)
) ;
COMMIT;

/* Views */
CREATE VIEW V_EPHEMERIDES
(
  IDX_EPHEMERIDE,
  IDX_ANNEESCOLAIRE,
  NOMEPHEMERIDE,
  STARTDATEPHEMERIDE,
  ENDDATEPHEMERIDE,
  ANNEEANNEESCOLAIRE
)
AS
SELECT 
  T_EPHEMERIDES.IDX_EPHEMERIDE,
  T_EPHEMERIDES.IDX_ANNEESCOLAIRE,
  T_EPHEMERIDES.NOMEPHEMERIDE,
  T_EPHEMERIDES.STARTDATEPHEMERIDE,
  T_EPHEMERIDES.ENDDATEPHEMERIDE,
  T_ANNEESSCOLAIRES.ANNEEANNEESCOLAIRE
FROM 
  T_EPHEMERIDES
  LEFT OUTER JOIN T_ANNEESSCOLAIRES ON (T_EPHEMERIDES.IDX_ANNEESCOLAIRE = T_ANNEESSCOLAIRES.IDX_ANNEESCOLAIRE)
ORDER BY
  T_ANNEESSCOLAIRES.ANNEEANNEESCOLAIRE DESC, T_EPHEMERIDES.STARTDATEPHEMERIDE DESC;
CREATE VIEW V_INDISPONIBILITESCHAUFFEURS
(
  IDX_INDISPONIBILITECHAUFFEUR,
  IDX_CHAUFFEUR,
  PRENOMCHAUFFEUR,
  STARTDATEINDISPONIBILITE,
  STARTTIMEINDISPONIBILITE,
  ENDDATEINDISPONIBILITE,
  ENDTIMEINDISPONIBILITE,
  ALLDAYINDISPONIBILITE
)
AS
SELECT 
  T_INDISPONIBILITESCHAUFFEURS.IDX_INDISPONIBILITECHAUFFEUR,
  T_INDISPONIBILITESCHAUFFEURS.IDX_CHAUFFEUR,
  T_CHAUFFEURS.PRENOMCHAUFFEUR,
  T_INDISPONIBILITESCHAUFFEURS.STARTDATEINDISPONIBILITE,
  T_INDISPONIBILITESCHAUFFEURS.STARTTIMEINDISPONIBILITE,
  T_INDISPONIBILITESCHAUFFEURS.ENDDATEINDISPONIBILITE,
  T_INDISPONIBILITESCHAUFFEURS.ENDTIMEINDISPONIBILITE,
  T_INDISPONIBILITESCHAUFFEURS.ALLDAYINDISPONIBILITE
FROM 
  T_INDISPONIBILITESCHAUFFEURS
  LEFT OUTER JOIN T_CHAUFFEURS ON (T_INDISPONIBILITESCHAUFFEURS.IDX_CHAUFFEUR = T_CHAUFFEURS.IDX_CHAUFFEUR)
ORDER BY
   T_INDISPONIBILITESCHAUFFEURS.STARTDATEINDISPONIBILITE, T_CHAUFFEURS.PRENOMCHAUFFEUR;
CREATE VIEW V_INDISPONIBILITESVEHICULES
(
  IDX_INDISPONIBILITEVEHICULE,
  IDX_VEHICULE,
  NOMVEHICULE,
  STARTDATEINDISPONIBILITE,
  STARTTIMEINDISPONIBILITE,
  ENDDATEINDISPONIBILITE,
  ENDTIMEINDISPONIBILITE,
  ALLDAYINDISPONIBILITE
)
AS
SELECT 
  T_INDISPONIBILITESVEHICULES.IDX_INDISPONIBILITEVEHICULE,
  T_INDISPONIBILITESVEHICULES.IDX_VEHICULE,
  T_VEHICULES.NOMVEHICULE,
  T_INDISPONIBILITESVEHICULES.STARTDATEINDISPONIBILITE,
  T_INDISPONIBILITESVEHICULES.STARTTIMEINDISPONIBILITE,
  T_INDISPONIBILITESVEHICULES.ENDDATEINDISPONIBILITE,
  T_INDISPONIBILITESVEHICULES.ENDTIMEINDISPONIBILITE,
  T_INDISPONIBILITESVEHICULES.ALLDAYINDISPONIBILITE
FROM 
  T_INDISPONIBILITESVEHICULES
  LEFT OUTER JOIN T_VEHICULES ON (T_INDISPONIBILITESVEHICULES.IDX_VEHICULE = T_VEHICULES.IDX_VEHICULE)
ORDER BY
   T_INDISPONIBILITESVEHICULES.STARTDATEINDISPONIBILITE, T_VEHICULES.NOMVEHICULE;
CREATE VIEW V_VEHICULES
(
  IDX_VEHICULE,
  NOMVEHICULE,
  PLACESVEHICULE,
  NUMEROVEHICULE,
  PLAQUEVEHICULE,
  MODELEVEHICULE,
  NOMTYPEVEHICULE,
  NOMMARQUE,
  IDX_TYPEVEHICULE,
  IDX_MARQUE
)
AS
SELECT 
  T_VEHICULES.IDX_VEHICULE,
  T_VEHICULES.NOMVEHICULE,
  T_VEHICULES.PLACESVEHICULE,
  T_VEHICULES.NUMEROVEHICULE,
  T_VEHICULES.PLAQUEVEHICULE,
  T_VEHICULES.MODELEVEHICULE,
  T_TYPESVEHICULES.NOMTYPEVEHICULE,
  T_MARQUES.NOMMARQUE,
  T_VEHICULES.IDX_TYPEVEHICULE,
  T_VEHICULES.IDX_MARQUE
FROM 
  T_VEHICULES
  LEFT OUTER JOIN T_TYPESVEHICULES ON (T_VEHICULES.IDX_TYPEVEHICULE = T_TYPESVEHICULES.IDX_TYPEVEHICULE)
  LEFT OUTER JOIN T_MARQUES ON (T_VEHICULES.IDX_MARQUE = T_MARQUES.IDX_MARQUE)
ORDER BY T_VEHICULES.NOMVEHICULE;

/* Constraints */
ALTER TABLE T_ANNEESSCOLAIRES
  ADD PRIMARY KEY (IDX_ANNEESCOLAIRE);

ALTER TABLE T_CHAUFFEURS
  ADD PRIMARY KEY (IDX_CHAUFFEUR);

ALTER TABLE T_EPHEMERIDES
  ADD PRIMARY KEY (IDX_EPHEMERIDE);

ALTER TABLE T_ETAPES
  ADD PRIMARY KEY (IDX_ETAPE);

ALTER TABLE T_INDISPONIBILITES
  ADD PRIMARY KEY (IDX_T_INDISPONIBILITE);

ALTER TABLE T_INDISPONIBILITESCHAUFFEURS
  ADD PRIMARY KEY (IDX_INDISPONIBILITECHAUFFEUR);

ALTER TABLE T_INDISPONIBILITESVEHICULES
  ADD PRIMARY KEY (IDX_INDISPONIBILITEVEHICULE);

ALTER TABLE T_MARQUES
  ADD PRIMARY KEY (IDX_MARQUE);

ALTER TABLE T_TRAJETS
  ADD PRIMARY KEY (IDX_TRAJET);

ALTER TABLE T_TYPESVEHICULES
  ADD PRIMARY KEY (IDX_TYPEVEHICULE);

ALTER TABLE T_VEHICULES
  ADD PRIMARY KEY (IDX_VEHICULE);

COMMIT;
/* Foreign Keys */
ALTER TABLE T_EPHEMERIDES
  ADD CONSTRAINT T_EPHEMERIDES_FOREIGN_KEY01
  FOREIGN KEY (IDX_ANNEESCOLAIRE)
    REFERENCES T_ANNEESSCOLAIRES(IDX_ANNEESCOLAIRE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_INDISPONIBILITESCHAUFFEURS
  ADD CONSTRAINT T_INDISPONIBILITESCHAUFFEURS_FOREIGN_KEY01
  FOREIGN KEY (IDX_CHAUFFEUR)
    REFERENCES T_CHAUFFEURS(IDX_CHAUFFEUR)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_INDISPONIBILITESVEHICULES
  ADD CONSTRAINT T_INDISPONIBILITESVEHICULES_FOREIGN_KEY01
  FOREIGN KEY (IDX_VEHICULE)
    REFERENCES T_VEHICULES(IDX_VEHICULE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_TRAJETS
  ADD CONSTRAINT T_TRAJETS_FOREIGN_KEY01
  FOREIGN KEY (IDX_ETAPEDEPART)
    REFERENCES T_ETAPES(IDX_ETAPE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_TRAJETS
  ADD CONSTRAINT T_TRAJETS_FOREIGN_KEY02
  FOREIGN KEY (IDX_ETAPEARRIVEE)
    REFERENCES T_ETAPES(IDX_ETAPE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_VEHICULES
  ADD CONSTRAINT T_VEHICULES_FOREIGN_KEY01
  FOREIGN KEY (IDX_MARQUE)
    REFERENCES T_MARQUES(IDX_MARQUE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

ALTER TABLE T_VEHICULES
  ADD CONSTRAINT T_VEHICULES_FOREIGN_KEY02
  FOREIGN KEY (IDX_TYPEVEHICULE)
    REFERENCES T_TYPESVEHICULES(IDX_TYPEVEHICULE)
    ON DELETE CASCADE
    ON UPDATE CASCADE;

