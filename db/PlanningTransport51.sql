/*
Created		23-08-21
Modified	23-08-21
Project		
Model		
Company		
Author		
Version		4.1
Database	Firebird 
*/

/*
Drop Table "T_PLANNINGS";
Drop Table "T_EPHEMERIDES";
Drop Table "T_ANNEESSCOLAIRES";
Drop Table "T_TRAJETS";
Drop Table "T_GROUPES";
Drop Table "T_DATESPLANNINGS";
Drop Table "T_TYPESPLANNINGS";
Drop Table "T_HEURESPLANNINGS";
Drop Table "T_ETAPES";
Drop Table "T_TRANSPORTS";
Drop Table "T_CHAUFFEURS";
Drop Table "T_VEHICULES";
*/

Create Table "T_VEHICULES"  (
	"IDX_VEHICULE" Integer NOT NULL,
	"MARQUEVEHICULE" Varchar(30) NOT NULL,
	"MODELEVEHICULE" Varchar(30) NOT NULL,
	"NOMVEHICULE" Varchar(30) NOT NULL,
	"PLACESVEHICULE" Integer NOT NULL,
 Primary Key ("IDX_VEHICULE")
);

Create Table "T_CHAUFFEURS"  (
	"IDX_CHAUFFEUR" Integer NOT NULL,
	"IDX_VEHICULE" Integer NOT NULL,
	"PRENOMCHAUFFEUR" Varchar(30) NOT NULL,
 Primary Key ("IDX_CHAUFFEUR")
);

Create Table "T_TRANSPORTS"  (
	"IDX_TRANSPORT" Integer NOT NULL,
	"IDX_ANNEESCOLAIRE" Integer NOT NULL,
	"IDX_PLANNING" Integer NOT NULL,
	"IDX_VEHICULE" Integer NOT NULL,
	"IDX_CHAUFFEUR" Integer NOT NULL,
	"IDX_GROUPE" Integer NOT NULL,
	"IDX_TRAJET" Integer NOT NULL,
	"NBRACCOMPAGNATEURTRAJET" Integer NOT NULL,
	"NOMACCOMPAGNATEURTRAJET" Varchar(30) NOT NULL,
 Primary Key ("IDX_TRANSPORT")
);

Create Table "T_ETAPES"  (
	"IDX_ETAPE" Integer NOT NULL,
	"NOMETAPE" Varchar(60) NOT NULL,
	"ADRESSEETAPE" Varchar(100) NOT NULL,
	"PRINTEDETAPE" BOOLEAN DEFAULT FALSE,
 Primary Key ("IDX_ETAPE")
);

Create Table "T_HEURESPLANNINGS"  (
	"IDX_HEUREPLANNING" Integer NOT NULL,
	"HEUREHEUREPLANNING" Time NOT NULL,
 Primary Key ("IDX_HEUREPLANNING")
);

Create Table "T_TYPESPLANNINGS"  (
	"IDX_TYPEPLANNING" Integer NOT NULL,
	"NOMTYPEPLANNING" Varchar(20) NOT NULL,
 Primary Key ("IDX_TYPEPLANNING")
);

Create Table "T_DATESPLANNINGS"  (
	"IDX_DATEPLANNING" Integer NOT NULL,
	"DATEDATEPLANNING" Date NOT NULL,
	"CODESEMAINEDATEPLANNING" Char(1) NOT NULL,
 Primary Key ("IDX_DATEPLANNING")
);

Create Table "T_GROUPES"  (
	"IDX_GROUPE" Integer NOT NULL,
	"NOMGROUPE" Varchar(20) NOT NULL,
	"NOMBREGROUPE" Integer NOT NULL,
 Primary Key ("IDX_GROUPE")
);

Create Table "T_TRAJETS"  (
	"IDX_TRAJET" Integer NOT NULL,
	"IDX_ETAPEDEPART" Integer NOT NULL,
	"IDX_ETAPEARRIVEE" Integer NOT NULL,
	"NOMTRAJET" Varchar(50) NOT NULL,
	"TEMPSTRAJET" Time NOT NULL,
	"KMTRAJET" Float NOT NULL,
 Primary Key ("IDX_TRAJET")
);

Create Table "T_ANNEESSCOLAIRES"  (
	"IDX_ANNEESCOLAIRE" Integer NOT NULL,
	"ANNEEANNEESCOLAIRE" Integer NOT NULL,
 Primary Key ("IDX_ANNEESCOLAIRE")
);

Create Table "T_EPHEMERIDES"  (
	"IDX_EPHEMERIDE" Integer NOT NULL,
	"IDX_ANNEESCOLAIRE" Integer NOT NULL,
	"INTITULEEPHEMERIDE" Varchar(60) NOT NULL,
	"DATEDEBUTEPHEMERIDE" Date NOT NULL,
	"DATEFINEPHEMERIDE" Date NOT NULL,
 Primary Key ("IDX_EPHEMERIDE")
);

Create Table "T_PLANNINGS"  (
	"IDX_PLANNING" Integer NOT NULL,
	"IDX_DATEPLANNING" Integer NOT NULL,
	"IDX_HEUREPLANNING" Integer NOT NULL,
	"IDX_TYPEPLANNING" Integer NOT NULL,
 Primary Key ("IDX_PLANNING")
);

Create Table "T_INDISPONIBILITES"  (
	"IDX_INDISPONIBILITE" Bigint NOT NULL,
	"IDX_CHAUFFEUR" Bigint NOT NULL,
	"DATEDEBUTINDISPONIBILITE" Date NOT NULL,
	"DATEFININDISPONIBILITE" Date NOT NULL,
	"HEUREDEBUTINDISPONIBILITE" Time,
	"HEUREFININDISPONIBILITE" Time,
 Primary Key ("IDX_INDISPONIBILITE")
);

Alter Table "T_CHAUFFEURS" add Foreign Key ("IDX_VEHICULE") references "T_VEHICULES" ("IDX_VEHICULE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_VEHICULE") references "T_VEHICULES" ("IDX_VEHICULE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_CHAUFFEUR") references "T_CHAUFFEURS" ("IDX_CHAUFFEUR") on update no action on delete no action ;
Alter Table "T_TRAJETS" add Foreign Key ("IDX_ETAPEDEPART") references "T_ETAPES" ("IDX_ETAPE") on update no action on delete no action ;
Alter Table "T_TRAJETS" add Foreign Key ("IDX_ETAPEARRIVEE") references "T_ETAPES" ("IDX_ETAPE") on update no action on delete no action ;
Alter Table "T_PLANNINGS" add Foreign Key ("IDX_HEUREPLANNING") references "T_HEURESPLANNINGS" ("IDX_HEUREPLANNING") on update no action on delete no action ;
Alter Table "T_PLANNINGS" add Foreign Key ("IDX_TYPEPLANNING") references "T_TYPESPLANNINGS" ("IDX_TYPEPLANNING") on update no action on delete no action ;
Alter Table "T_PLANNINGS" add Foreign Key ("IDX_DATEPLANNING") references "T_DATESPLANNINGS" ("IDX_DATEPLANNING") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_GROUPE") references "T_GROUPES" ("IDX_GROUPE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_TRAJET") references "T_TRAJETS" ("IDX_TRAJET") on update no action on delete no action ;
Alter Table "T_EPHEMERIDES" add Foreign Key ("IDX_ANNEESCOLAIRE") references "T_ANNEESSCOLAIRES" ("IDX_ANNEESCOLAIRE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_ANNEESCOLAIRE") references "T_ANNEESSCOLAIRES" ("IDX_ANNEESCOLAIRE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_PLANNING") references "T_PLANNINGS" ("IDX_PLANNING") on update no action on delete no action ;
Alter Table "T_INDISPONIBILITES" add Foreign Key ("IDX_CHAUFFEUR") references "T_CHAUFFEURS" ("IDX_CHAUFFEUR") on update no action on delete no action ;


Create Exception "except_del_p" 'Children still exist in child table. Cannot delete parent.';
Create Exception "except_ins_ch" 'Parent does not exist. Cannot create child.';
Create Exception "except_upd_ch" 'Parent does not exist. Cannot update child.';
Create Exception "except_upd_p" 'Children still exist in child table. Cannot update parent.';
Create Exception "except_ins_ch_card" 'Maximum cardinality exceeded. Cannot insert into child.';
Create Exception "except_upd_ch_card" 'Maximum cardinality exceeded. Cannot update child.';


set term ^;


set term ;^


/* Roles permissions */


/* Users permissions */


/* "Autoinc" functionality for T_CHAUFFEURS_IDX_CHAUFFEUR*/ 
CREATE SEQUENCE "SEQ_T_CHAUFFEURS_IDX_CHAUFFEUR";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_CHAUFFEURS_IDX_CHAUFFEUR" FOR "T_CHAUFFEURS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_CHAUFFEUR" IS NULL) THEN NEW."IDX_CHAUFFEUR" = GEN_ID("SEQ_T_CHAUFFEURS_IDX_CHAUFFEUR",1); 
END
^
CREATE PROCEDURE "P_T_CHAUFFEURS_IDX_CHAUFFEUR"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_CHAUFFEURS_IDX_CHAUFFEUR",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_GROUPES_IDX_GROUPE*/ 
CREATE SEQUENCE "SEQ_T_GROUPES_IDX_GROUPE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_GROUPES_IDX_GROUPE" FOR "T_GROUPES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_GROUPE" IS NULL) THEN NEW."IDX_GROUPE" = GEN_ID("SEQ_T_GROUPES_IDX_GROUPE",1); 
END
^
CREATE PROCEDURE "P_T_GROUPES_IDX_GROUPE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_GROUPES_IDX_GROUPE",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TYPESPLANNINGS_IDX_TYPEPLA*/ 
CREATE SEQUENCE "SEQ_T_TYPESPLANNINGS_IDX_TYPEPLA";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TYPESPLANNINGS_IDX_TYPEPLA" FOR "T_TYPESPLANNINGS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TYPEPLANNING" IS NULL) THEN NEW."IDX_TYPEPLANNING" = GEN_ID("SEQ_T_TYPESPLANNINGS_IDX_TYPEPLA",1); 
END
^
CREATE PROCEDURE "P_T_TYPESPLANNINGS_IDX_TYPEPLA"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TYPESPLANNINGS_IDX_TYPEPLA",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_ANNEESSCOLAIRES_IDX_ANNEES*/ 
CREATE SEQUENCE "SEQ_T_ANNEESSCOLAIRES_IDX_ANNEES";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_ANNEESSCOLAIRES_IDX_ANNEES" FOR "T_ANNEESSCOLAIRES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_ANNEESCOLAIRE" IS NULL) THEN NEW."IDX_ANNEESCOLAIRE" = GEN_ID("SEQ_T_ANNEESSCOLAIRES_IDX_ANNEES",1); 
END
^
CREATE PROCEDURE "P_T_ANNEESSCOLAIRES_IDX_ANNEES"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_ANNEESSCOLAIRES_IDX_ANNEES",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_EPHEMERIDES_IDX_EPHEMERIDE*/ 
CREATE SEQUENCE "SEQ_T_EPHEMERIDES_IDX_EPHEMERIDE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_EPHEMERIDES_IDX_EPHEMERIDE" FOR "T_EPHEMERIDES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_EPHEMERIDE" IS NULL) THEN NEW."IDX_EPHEMERIDE" = GEN_ID("SEQ_T_EPHEMERIDES_IDX_EPHEMERIDE",1); 
END
^
CREATE PROCEDURE "P_T_EPHEMERIDES_IDX_EPHEMERIDE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_EPHEMERIDES_IDX_EPHEMERIDE",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_VEHICULES_IDX_VEHICULE*/ 
CREATE SEQUENCE "SEQ_T_VEHICULES_IDX_VEHICULE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_VEHICULES_IDX_VEHICULE" FOR "T_VEHICULES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_VEHICULE" IS NULL) THEN NEW."IDX_VEHICULE" = GEN_ID("SEQ_T_VEHICULES_IDX_VEHICULE",1); 
END
^
CREATE PROCEDURE "P_T_VEHICULES_IDX_VEHICULE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_VEHICULES_IDX_VEHICULE",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TRAJETS_IDX_TRAJET*/ 
CREATE SEQUENCE "SEQ_T_TRAJETS_IDX_TRAJET";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TRAJETS_IDX_TRAJET" FOR "T_TRAJETS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TRAJET" IS NULL) THEN NEW."IDX_TRAJET" = GEN_ID("SEQ_T_TRAJETS_IDX_TRAJET",1); 
END
^
CREATE PROCEDURE "P_T_TRAJETS_IDX_TRAJET"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TRAJETS_IDX_TRAJET",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_DATESPLANNINGS_IDX_DATEPLA*/ 
CREATE SEQUENCE "SEQ_T_DATESPLANNINGS_IDX_DATEPLA";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_DATESPLANNINGS_IDX_DATEPLA" FOR "T_DATESPLANNINGS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_DATEPLANNING" IS NULL) THEN NEW."IDX_DATEPLANNING" = GEN_ID("SEQ_T_DATESPLANNINGS_IDX_DATEPLA",1); 
END
^
CREATE PROCEDURE "P_T_DATESPLANNINGS_IDX_DATEPLA"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_DATESPLANNINGS_IDX_DATEPLA",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_ETAPES_IDX_ETAPE*/ 
CREATE SEQUENCE "SEQ_T_ETAPES_IDX_ETAPE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_ETAPES_IDX_ETAPE" FOR "T_ETAPES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_ETAPE" IS NULL) THEN NEW."IDX_ETAPE" = GEN_ID("SEQ_T_ETAPES_IDX_ETAPE",1); 
END
^
CREATE PROCEDURE "P_T_ETAPES_IDX_ETAPE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_ETAPES_IDX_ETAPE",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_HEURESPLANNINGS_IDX_HEURES*/ 
CREATE SEQUENCE "SEQ_T_HEURESPLANNINGS_IDX_HEURES";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_HEURESPLANNINGS_IDX_HEURES" FOR "T_HEURESPLANNINGS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_HEUREPLANNING" IS NULL) THEN NEW."IDX_HEUREPLANNING" = GEN_ID("SEQ_T_HEURESPLANNINGS_IDX_HEURES",1); 
END
^
CREATE PROCEDURE "P_T_HEURESPLANNINGS_IDX_HEURES"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_HEURESPLANNINGS_IDX_HEURES",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_PLANNINGS_IDX_PLANNING*/ 
CREATE SEQUENCE "SEQ_T_PLANNINGS_IDX_PLANNING";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_PLANNINGS_IDX_PLANNING" FOR "T_PLANNINGS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_PLANNING" IS NULL) THEN NEW."IDX_PLANNING" = GEN_ID("SEQ_T_PLANNINGS_IDX_PLANNING",1); 
END
^
CREATE PROCEDURE "P_T_PLANNINGS_IDX_PLANNING"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_PLANNINGS_IDX_PLANNING",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TRANSPORTS_IDX_TRANSPORT*/ 
CREATE SEQUENCE "SEQ_T_TRANSPORTS_IDX_TRANSPORT";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TRANSPORTS_IDX_TRANSPORT" FOR "T_TRANSPORTS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TRANSPORT" IS NULL) THEN NEW."IDX_TRANSPORT" = GEN_ID("SEQ_T_TRANSPORTS_IDX_TRANSPORT",1); 
END
^
CREATE PROCEDURE "P_T_TRANSPORTS_IDX_TRANSPORT"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TRANSPORTS_IDX_TRANSPORT",1);
   SUSPEND;
END
^
SET TERM ; ^

/* "Autoinc" functionality for T_INDISPONIBILITES_IDX_INDISPONIBILITE*/ 
CREATE SEQUENCE "SEQ_T_INDISPONIBILITES_IDX_INDISPONIBILITE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_INDISPONIBILITES_IDX_INDISPONIBILITE" FOR "T_INDISPONIBILITES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_INDISPONIBILITE" IS NULL) THEN NEW."IDX_INDISPONIBILITE" = GEN_ID("SEQ_T_INDISPONIBILITES_IDX_INDISPONIBILITE",1); 
END
^
CREATE PROCEDURE "P_T_INDISPONIBILITES_IDX_INDISPONIBILITE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_INDISPONIBILITES_IDX_INDISPONIBILITE",1);
   SUSPEND;
END
^
SET TERM ; ^


/* Views */
CREATE VIEW "V_EPHEMERIDES-FULL"
(
  IDX_EPHEMERIDE,
  IDX_ANNEESCOLAIRE,
  INTITULEEPHEMERIDE,
  DATEDEBUTEPHEMERIDE,
  DATEFINEPHEMERIDE,
  ANNEEANNEESCOLAIRE
)
AS
SELECT 
  T_EPHEMERIDES.IDX_EPHEMERIDE,
  T_EPHEMERIDES.IDX_ANNEESCOLAIRE,
  T_EPHEMERIDES.INTITULEEPHEMERIDE,
  T_EPHEMERIDES.DATEDEBUTEPHEMERIDE,
  T_EPHEMERIDES.DATEFINEPHEMERIDE,
  T_ANNEESSCOLAIRES.ANNEEANNEESCOLAIRE
FROM 
  T_EPHEMERIDES
  LEFT OUTER JOIN T_ANNEESSCOLAIRES ON (T_EPHEMERIDES.IDX_ANNEESCOLAIRE = T_ANNEESSCOLAIRES.IDX_ANNEESCOLAIRE);

CREATE VIEW "V_TRAJETS-FULL"
(
  IDX_TRAJET,
  IDX_ETAPEDEPART,
  IDX_ETAPEARRIVEE,
  NOMTRAJET,
  TEMPSTRAJET,
  KMTRAJET,
  NOMETAPEDEPART,
  NOMETAPEARRIVEE,
  ADRESSEETAPEDEPART,
  ADRESSEETAPEARRIVEE
)
AS
SELECT  
  T_TRAJETS.IDX_TRAJET,
  T_TRAJETS.IDX_ETAPEDEPART,
  T_TRAJETS.IDX_ETAPEARRIVEE,
  T_TRAJETS.NOMTRAJET,
  T_TRAJETS.TEMPSTRAJET,
  T_TRAJETS.KMTRAJET,
  T_ETAPES.NOMETAPE as NOMETAPEDEPART,
  T_ETAPES1.NOMETAPE as NOMETAPEARRIVEE,
  T_ETAPES.ADRESSEETAPE as ADRESSEETAPEDEPART,
  T_ETAPES1.ADRESSEETAPE as ADRESSEETAPEARRIVEE  
FROM 
  T_TRAJETS
  INNER JOIN T_ETAPES ON (T_TRAJETS.IDX_ETAPEDEPART = T_ETAPES.IDX_ETAPE)
  INNER JOIN T_ETAPES T_ETAPES1 ON (T_TRAJETS.IDX_ETAPEARRIVEE = T_ETAPES1.IDX_ETAPE);
  
CREATE VIEW "V_PLANNINGS-FULL"
(
  IDX_PLANNING,
  IDX_DATEPLANNING,
  IDX_HEUREPLANNING,
  IDX_TYPEPLANNING,
  DATEDATEPLANNING,
  CODESEMAINEDATEPLANNING,
  HEUREHEUREPLANNING,
  NOMTYPEPLANNING
)
AS
SELECT 
  T_PLANNINGS.IDX_PLANNING,
  T_PLANNINGS.IDX_DATEPLANNING,
  T_PLANNINGS.IDX_HEUREPLANNING,
  T_PLANNINGS.IDX_TYPEPLANNING,
  T_DATESPLANNINGS.DATEDATEPLANNING,
  T_DATESPLANNINGS.CODESEMAINEDATEPLANNING,
  T_HEURESPLANNINGS.HEUREHEUREPLANNING,
  T_TYPESPLANNINGS.NOMTYPEPLANNING
FROM 
  T_PLANNINGS
  LEFT OUTER JOIN T_DATESPLANNINGS ON (T_PLANNINGS.IDX_DATEPLANNING = T_DATESPLANNINGS.IDX_DATEPLANNING)
  LEFT OUTER JOIN T_HEURESPLANNINGS ON (T_PLANNINGS.IDX_HEUREPLANNING = T_HEURESPLANNINGS.IDX_HEUREPLANNING)
  LEFT OUTER JOIN T_TYPESPLANNINGS ON (T_PLANNINGS.IDX_TYPEPLANNING = T_TYPESPLANNINGS.IDX_TYPEPLANNING);

CREATE VIEW "V_CHAUFFEURS-FULL"
(
  IDX_CHAUFFEUR,
  IDX_VEHICULE,
  PRENOMCHAUFFEUR,
  MARQUEVEHICULE,
  MODELEVEHICULE,
  NOMVEHICULE,
  PLACESVEHICULE
)
AS
SELECT 
  T_CHAUFFEURS.IDX_CHAUFFEUR,
  T_CHAUFFEURS.IDX_VEHICULE,
  T_CHAUFFEURS.PRENOMCHAUFFEUR,
  T_VEHICULES.MARQUEVEHICULE,
  T_VEHICULES.MODELEVEHICULE,
  T_VEHICULES.NOMVEHICULE,
  T_VEHICULES.PLACESVEHICULE
FROM 
  T_CHAUFFEURS
  LEFT OUTER JOIN T_VEHICULES ON (T_CHAUFFEURS.IDX_VEHICULE = T_VEHICULES.IDX_VEHICULE)
ORDER BY
  T_CHAUFFEURS.PRENOMCHAUFFEUR;

CREATE VIEW "V_TRANSPORTS-FULL"
(
  IDX_TRANSPORT,
  IDX_DATEPLANNING,
  IDX_HEUREPLANNING,
  IDX_ANNEESCOLAIRE,
  IDX_TYPEPLANNING,
  IDX_VEHICULE,
  IDX_CHAUFFEUR,
  IDX_GROUPE,
  IDX_TRAJET,
  IDX_ETAPEDEPART,
  IDX_ETAPEARRIVEE,
  NOMACCOMPAGNATEURTRAJET,
  NBRACCOMPAGNATEURTRAJET,
  DATEDATEPLANNING,
  CODESEMAINEDATEPLANNING,
  HEUREHEUREPLANNING,
  NOMTYPEPLANNING,
  NOMVEHICULE,
  PRENOMCHAUFFEUR,
  NOMGROUPE,
  NOMBREGROUPE,
  NOMTRAJET,
  TEMPSTRAJET,
  KMTRAJET,
  PLACESVEHICULE,
  MARQUEVEHICULE,
  MODELEVEHICULE,
  ANNEEANNEESCOLAIRE,
  NOMETAPE,
  ADRESSEETAPE,
  PRINTEDETAPE,
  NOMETAPE2,
  ADRESSEETAPE2,
  PRINTEDETAPE2
)
AS
SELECT 
  T_TRANSPORTS.IDX_TRANSPORT,
  T_PLANNINGS.IDX_DATEPLANNING,
  T_PLANNINGS.IDX_HEUREPLANNING,
  T_TRANSPORTS.IDX_ANNEESCOLAIRE,
  T_PLANNINGS.IDX_TYPEPLANNING,
  T_TRANSPORTS.IDX_VEHICULE,
  T_TRANSPORTS.IDX_CHAUFFEUR,
  T_TRANSPORTS.IDX_GROUPE,
  T_TRANSPORTS.IDX_TRAJET,
  T_TRAJETS.IDX_ETAPEDEPART,
  T_TRAJETS.IDX_ETAPEARRIVEE,
  T_TRANSPORTS.NOMACCOMPAGNATEURTRAJET,
  T_TRANSPORTS.NBRACCOMPAGNATEURTRAJET,
  T_DATESPLANNINGS.DATEDATEPLANNING,
  T_DATESPLANNINGS.CODESEMAINEDATEPLANNING,
  T_HEURESPLANNINGS.HEUREHEUREPLANNING,
  T_TYPESPLANNINGS.NOMTYPEPLANNING,
  T_VEHICULES.NOMVEHICULE,
  T_CHAUFFEURS.PRENOMCHAUFFEUR,
  T_GROUPES.NOMGROUPE,
  T_GROUPES.NOMBREGROUPE,
  T_TRAJETS.NOMTRAJET,
  T_TRAJETS.TEMPSTRAJET,
  T_TRAJETS.KMTRAJET,
  T_VEHICULES.PLACESVEHICULE,
  T_VEHICULES.MARQUEVEHICULE,
  T_VEHICULES.MODELEVEHICULE,
  T_ANNEESSCOLAIRES.ANNEEANNEESCOLAIRE,
  T_ETAPES.NOMETAPE,
  T_ETAPES.ADRESSEETAPE,
  T_ETAPES.PRINTEDETAPE,
  T_ETAPES1.NOMETAPE AS NOMETAPE2,
  T_ETAPES1.ADRESSEETAPE AS ADRESSEETAPE2,
  T_ETAPES1.PRINTEDETAPE AS PRINTEDETAPE2
FROM
  T_TRANSPORTS
  INNER JOIN T_PLANNINGS ON (T_TRANSPORTS.IDX_PLANNING = T_PLANNINGS.IDX_PLANNING)
  INNER JOIN T_DATESPLANNINGS ON (T_PLANNINGS.IDX_DATEPLANNING = T_DATESPLANNINGS.IDX_DATEPLANNING)
  INNER JOIN T_HEURESPLANNINGS ON (T_PLANNINGS.IDX_HEUREPLANNING = T_HEURESPLANNINGS.IDX_HEUREPLANNING)
  INNER JOIN T_ANNEESSCOLAIRES ON (T_TRANSPORTS.IDX_ANNEESCOLAIRE = T_ANNEESSCOLAIRES.IDX_ANNEESCOLAIRE)
  INNER JOIN T_TYPESPLANNINGS ON (T_PLANNINGS.IDX_TYPEPLANNING = T_TYPESPLANNINGS.IDX_TYPEPLANNING)
  INNER JOIN T_VEHICULES ON (T_TRANSPORTS.IDX_VEHICULE = T_VEHICULES.IDX_VEHICULE)
  INNER JOIN T_CHAUFFEURS ON (T_TRANSPORTS.IDX_CHAUFFEUR = T_CHAUFFEURS.IDX_CHAUFFEUR)
  INNER JOIN T_GROUPES ON (T_TRANSPORTS.IDX_GROUPE = T_GROUPES.IDX_GROUPE)
  INNER JOIN T_TRAJETS ON (T_TRANSPORTS.IDX_TRAJET = T_TRAJETS.IDX_TRAJET)
  INNER JOIN T_ETAPES ON (T_TRAJETS.IDX_ETAPEDEPART = T_ETAPES.IDX_ETAPE)
  INNER JOIN T_ETAPES T_ETAPES1 ON (T_TRAJETS.IDX_ETAPEARRIVEE = T_ETAPES1.IDX_ETAPE);
  
/* Data for table "T_ANNEESSCOLAIRES" */
INSERT INTO T_ANNEESSCOLAIRES (ANNEEANNEESCOLAIRE) VALUES (2021);
INSERT INTO T_ANNEESSCOLAIRES (ANNEEANNEESCOLAIRE) VALUES (2022);
COMMIT;

/* Data for table "T_EPHEMERIDES" */
INSERT INTO T_EPHEMERIDES (IDX_ANNEESCOLAIRE, INTITULEEPHEMERIDE, DATEDEBUTEPHEMERIDE, DATEFINEPHEMERIDE) VALUES (1, 'Conge d automne (Toussaint)', '2021-10-01', '2021-10-05');
INSERT INTO T_EPHEMERIDES (IDX_ANNEESCOLAIRE, INTITULEEPHEMERIDE, DATEDEBUTEPHEMERIDE, DATEFINEPHEMERIDE) VALUES (1, 'Commemoration du 11 novembre', '2021-11-11', '2021-11-11');
INSERT INTO T_EPHEMERIDES (IDX_ANNEESCOLAIRE, INTITULEEPHEMERIDE, DATEDEBUTEPHEMERIDE, DATEFINEPHEMERIDE) VALUES (1, 'Lundi de Paques', '2022-04-18', '2022-04-18');
INSERT INTO T_EPHEMERIDES (IDX_ANNEESCOLAIRE, INTITULEEPHEMERIDE, DATEDEBUTEPHEMERIDE, DATEFINEPHEMERIDE) VALUES (1, 'Vacances d hiver (Noel)', '2021-12-27', '2022-01-09');
INSERT INTO T_EPHEMERIDES (IDX_ANNEESCOLAIRE, INTITULEEPHEMERIDE, DATEDEBUTEPHEMERIDE, DATEFINEPHEMERIDE) VALUES (1, 'Conge de detente (Carnaval)', '2022-02-28', '2022-03-04');
COMMIT;


