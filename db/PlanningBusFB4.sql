/*
Created		13-06-21
Modified	13-06-21
Project		
Model		
Company		
Author		
Version		1.0
Database	Firebird 
*/


Drop Table "T_TRAJETS";
Drop Table "T_GROUPES";
Drop Table "T_DATESPLANNING";
Drop Table "T_TYPEPLANNING";
Drop Table "T_PLANNING";
Drop Table "T_ETAPES";
Drop Table "T_TRANSPORTS";
Drop Table "T_CHAUFEURS";
Drop Table "T_BUS";


Create Table "T_BUS"  (
	"IDX_BUS" Bigint NOT NULL,
	"MARQUEBUS" Varchar(30) NOT NULL,
	"MODELEBUS" Varchar(30) NOT NULL,
	"NOMBUS" Varchar(30) NOT NULL,
	"PLACESBUS" Integer NOT NULL,
 Primary Key ("IDX_BUS")
);

Create Table "T_CHAUFEURS"  (
	"IDX_CHAUFFEUR" Bigint NOT NULL,
	"IDX_BUS" Bigint NOT NULL,
	"PRENOMCHAUFFEUR" Varchar(30) NOT NULL,
 Primary Key ("IDX_CHAUFFEUR")
);

Create Table "T_TRANSPORTS"  (
	"IDX_TRANSPORT" Bigint NOT NULL,
	"IDX_BUS" Bigint NOT NULL,
	"IDX_TRAJET" Bigint NOT NULL,
	"IDX_PLANNING" Bigint NOT NULL,
	"IDX_GROUPE" Bigint NOT NULL,
	"NBRACCOMPAGNATEURTRAJET" Integer NOT NULL,
	"NOMACCOMPAGNATEURTRAJET" Varchar(30) NOT NULL,
 Primary Key ("IDX_TRANSPORT")
);

Create Table "T_ETAPES"  (
	"IDX_ETAPE" Bigint NOT NULL,
	"NOMETAPE" Varchar(30),
	"ADRESSEETAPE" Varchar(100),
 Primary Key ("IDX_ETAPE")
);

Create Table "T_PLANNING"  (
	"IDX_PLANNING" Bigint NOT NULL,
	"IDX_TYPEPLANNING" Bigint NOT NULL,
	"HEUREPLANNING" Time NOT NULL,
 Primary Key ("IDX_PLANNING")
);

Create Table "T_TYPEPLANNING"  (
	"IDX_TYPEPLANNING" Bigint NOT NULL,
	"NOMTYPEPLANNING" Varchar(20) NOT NULL,
 Primary Key ("IDX_TYPEPLANNING")
);

Create Table "T_DATESPLANNING"  (
	"IDX_DATEPLANNING" Bigint NOT NULL,
	"IDX_PLANNING" Bigint NOT NULL,
	"DATEPLANNING" Date NOT NULL,
 Primary Key ("IDX_DATEPLANNING")
);

Create Table "T_GROUPES"  (
	"IDX_GROUPE" Bigint NOT NULL,
	"NOMGROUPE" Varchar(20) NOT NULL,
	"NOMBREGROUPE" Integer NOT NULL,
 Primary Key ("IDX_GROUPE")
);

Create Table "T_TRAJETS"  (
	"IDX_TRAJET" Bigint NOT NULL,
	"IDX_ETAPEDEPART" Bigint NOT NULL,
	"IDX_ETAPEARRIVEE" Bigint NOT NULL,
	"TEMPSTRAJET" Time NOT NULL,
	"KMTRAJET" Float NOT NULL,
 Primary Key ("IDX_TRAJET")
);


Alter Table "T_CHAUFEURS" add Foreign Key ("IDX_BUS") references "T_BUS" ("IDX_BUS") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_BUS") references "T_BUS" ("IDX_BUS") on update no action on delete no action ;
Alter Table "T_TRAJETS" add Foreign Key ("IDX_ETAPEDEPART") references "T_ETAPES" ("IDX_ETAPE") on update no action on delete no action ;
Alter Table "T_TRAJETS" add Foreign Key ("IDX_ETAPEARRIVEE") references "T_ETAPES" ("IDX_ETAPE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_PLANNING") references "T_PLANNING" ("IDX_PLANNING") on update no action on delete no action ;
Alter Table "T_DATESPLANNING" add Foreign Key ("IDX_PLANNING") references "T_PLANNING" ("IDX_PLANNING") on update no action on delete no action ;
Alter Table "T_PLANNING" add Foreign Key ("IDX_TYPEPLANNING") references "T_TYPEPLANNING" ("IDX_TYPEPLANNING") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_GROUPE") references "T_GROUPES" ("IDX_GROUPE") on update no action on delete no action ;
Alter Table "T_TRANSPORTS" add Foreign Key ("IDX_TRAJET") references "T_TRAJETS" ("IDX_TRAJET") on update no action on delete no action ;


Create Exception "except_del_p" 'Children still exist in child table. Cannot delete parent.';
Create Exception "except_ins_ch" 'Parent does not exist. Cannot create child.';
Create Exception "except_upd_ch" 'Parent does not exist. Cannot update child.';
Create Exception "except_upd_p" 'Children still exist in child table. Cannot update parent.';
Create Exception "except_ins_ch_card" 'Maximum cardinality exceeded. Cannot insert into child.';
Create Exception "except_upd_ch_card" 'Maximum cardinality exceeded. Cannot update child.';


set term ^;


set term ;^


/* Roles permissions */


/* Users permissions */


/* "Autoinc" functionality for T_ETAPES_IDX_ETAPE*/ 
CREATE SEQUENCE "SEQ_T_ETAPES_IDX_ETAPE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_ETAPES_IDX_ETAPE" FOR "T_ETAPES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_ETAPE" IS NULL) THEN NEW."IDX_ETAPE" = GEN_ID("SEQ_T_ETAPES_IDX_ETAPE",1); 
END
^
CREATE PROCEDURE "P_T_ETAPES_IDX_ETAPE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_ETAPES_IDX_ETAPE",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_PLANNING_IDX_PLANNING*/ 
CREATE SEQUENCE "SEQ_T_PLANNING_IDX_PLANNING";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_PLANNING_IDX_PLANNING" FOR "T_PLANNING"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_PLANNING" IS NULL) THEN NEW."IDX_PLANNING" = GEN_ID("SEQ_T_PLANNING_IDX_PLANNING",1); 
END
^
CREATE PROCEDURE "P_T_PLANNING_IDX_PLANNING"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_PLANNING_IDX_PLANNING",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_BUS_IDX_BUS*/ 
CREATE SEQUENCE "SEQ_T_BUS_IDX_BUS";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_BUS_IDX_BUS" FOR "T_BUS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_BUS" IS NULL) THEN NEW."IDX_BUS" = GEN_ID("SEQ_T_BUS_IDX_BUS",1); 
END
^
CREATE PROCEDURE "P_T_BUS_IDX_BUS"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_BUS_IDX_BUS",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_DATESPLANNING_IDX_DATEPLAN*/ 
CREATE SEQUENCE "SEQ_T_DATESPLANNING_IDX_DATEPLAN";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_DATESPLANNING_IDX_DATEPLAN" FOR "T_DATESPLANNING"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_DATEPLANNING" IS NULL) THEN NEW."IDX_DATEPLANNING" = GEN_ID("SEQ_T_DATESPLANNING_IDX_DATEPLAN",1); 
END
^
CREATE PROCEDURE "P_T_DATESPLANNING_IDX_DATEPLAN"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_DATESPLANNING_IDX_DATEPLAN",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_CHAUFEURS_IDX_CHAUFFEUR*/ 
CREATE SEQUENCE "SEQ_T_CHAUFEURS_IDX_CHAUFFEUR";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_CHAUFEURS_IDX_CHAUFFEUR" FOR "T_CHAUFEURS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_CHAUFFEUR" IS NULL) THEN NEW."IDX_CHAUFFEUR" = GEN_ID("SEQ_T_CHAUFEURS_IDX_CHAUFFEUR",1); 
END
^
CREATE PROCEDURE "P_T_CHAUFEURS_IDX_CHAUFFEUR"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_CHAUFEURS_IDX_CHAUFFEUR",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TYPEPLANNING_IDX_TYPEPLANN*/ 
CREATE SEQUENCE "SEQ_T_TYPEPLANNING_IDX_TYPEPLANN";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TYPEPLANNING_IDX_TYPEPLANN" FOR "T_TYPEPLANNING"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TYPEPLANNING" IS NULL) THEN NEW."IDX_TYPEPLANNING" = GEN_ID("SEQ_T_TYPEPLANNING_IDX_TYPEPLANN",1); 
END
^
CREATE PROCEDURE "P_T_TYPEPLANNING_IDX_TYPEPLANN"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TYPEPLANNING_IDX_TYPEPLANN",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TRAJETS_IDX_TRAJET*/ 
CREATE SEQUENCE "SEQ_T_TRAJETS_IDX_TRAJET";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TRAJETS_IDX_TRAJET" FOR "T_TRAJETS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TRAJET" IS NULL) THEN NEW."IDX_TRAJET" = GEN_ID("SEQ_T_TRAJETS_IDX_TRAJET",1); 
END
^
CREATE PROCEDURE "P_T_TRAJETS_IDX_TRAJET"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TRAJETS_IDX_TRAJET",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_TRANSPORTS_IDX_TRANSPORT*/ 
CREATE SEQUENCE "SEQ_T_TRANSPORTS_IDX_TRANSPORT";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_TRANSPORTS_IDX_TRANSPORT" FOR "T_TRANSPORTS"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_TRANSPORT" IS NULL) THEN NEW."IDX_TRANSPORT" = GEN_ID("SEQ_T_TRANSPORTS_IDX_TRANSPORT",1); 
END
^
CREATE PROCEDURE "P_T_TRANSPORTS_IDX_TRANSPORT"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_TRANSPORTS_IDX_TRANSPORT",1);
   SUSPEND;
END
^
SET TERM ; ^
/* "Autoinc" functionality for T_GROUPES_IDX_GROUPE*/ 
CREATE SEQUENCE "SEQ_T_GROUPES_IDX_GROUPE";
SET TERM ^ ;
CREATE TRIGGER "TR_BI_T_GROUPES_IDX_GROUPE" FOR "T_GROUPES"
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW."IDX_GROUPE" IS NULL) THEN NEW."IDX_GROUPE" = GEN_ID("SEQ_T_GROUPES_IDX_GROUPE",1); 
END
^
CREATE PROCEDURE "P_T_GROUPES_IDX_GROUPE"
RETURNS (
    "AUTOINC" INTEGER)
AS
BEGIN  
	"AUTOINC" = GEN_ID("SEQ_T_GROUPES_IDX_GROUPE",1);
   SUSPEND;
END
^
SET TERM ; ^

